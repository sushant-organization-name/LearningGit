# Advanced Git Topics
HEAD -> Last commit on the current branch

# Get the commit IDs using (hist is the alias we created in our Basics Lectures"
git hist

# Get differences between your HEAD and the commit id
git diff commit_id HEAD

# HEAD in repo git local v/s working directory
git diff

# More help
git diff --help

-----------------------------------------------------------------------------------			

# Branches and Merges

# Types of Merge
Fast Forward Merge - When no additional work happens on master branch and the only work happens in the newly created branch and then it is merged directly with the master. 
Automatic Merge - When no conflicts are defined in the master v/s branch 
Manual Merge - When Git can not resolve the conflicts that happens on the same branch by the user A and user B 

-----------------------------------------------------------------------------------			

# Special Pointers in Git

# HEAD
Points to the last commit of the current branch i.e. in the local user git repo

-----------------------------------------------------------------------------------			

# Current branch check
git branch

# create a new branch updates and switch to a new branch
git checkout -b updates

# Previously used commands to commit the changes to user git local 
git add .
git commit -m "Your message"

# Switch branches (from updates to master branch)
git checkout master

# Merge changes from advanced branch to master branch
git merge updates i.e. git merge branch_name 

# Check history using alias. This should show HEAD, master and updates branch on same location i.e. same commit id. 
git hist

# Delete a branch from your local after merging in your changes
git branch -d branch_name
 
-----------------------------------------------------------------------------------

# Resolve Conflicts
