# GitHub Create a new Branch

You will be on master branch by default on github. In order to create a new branch, in the branch dropdown, write the name of the
new branch that you want to create. 

Once done, you will find a new branch that is listed in the dropdown and github automatically changes your branch from master 
to example.

-----------------------------------------------------------------------------------			

# Create branch locally
git checkout -b branch_name

# remove a file
git rm file_name.txt
git status

# push the newly created branch to github
git push -u remote_name(origin) branch_name 

	-u sets up the tracking relationship between the local and remote branch. 
	
# Push and Pull without specifying the name of the branch as you have set up the tracking relationship earlier
git push 
git pull

-----------------------------------------------------------------------------------			

# Merge branch locally 
git merge branch_name

-----------------------------------------------------------------------------------			

# Remove dead/deleted remote branches
git fetch -p

# Delete branch locally
git branch -d branch_name

-----------------------------------------------------------------------------------			

# Link a local branch to the already created branch in remote repo (by you or someone else)

# Create a new branch from GitHub UI
# Edit a file from Github & commit it( if you want! )

# Fetch everything from remote repo to local repo 
git fetch 

# See all the branches (local + remote)
git branch -a

# It will only work in single remotes repo. Git will figure out and look for the branch name in local and if it fails, it will 
# look into remote repo. Branch name is unique among all your remotes, it will create.  
git checkout branch_name_same_as_remote_branch_name

-----------------------------------------------------------------------------------

# Pull all the changes from master and branches in remote repo to your working directory
git pull --all

# Merge your local changes to the branch
git merge branch_name

# Pull all the changes from master and branches in remote repo to your local repo and then working directory
git fetch --all
git pull

-----------------------------------------------------------------------------------

# Delete a remote branch from your local command line
git push origin :branch_name_to_be_deleted

-----------------------------------------------------------------------------------

# Pull with Rebase

Rebase: rewinds the current commits to the current state of the branch to a point to where your branch you are merging in
originally diverged. Then playing back to commits that happened you want to bring in and then on top of that playing to any 
commits to the branch you are currently on

-----------------------------------------------------------------------------------

# Rename a file

-----------------------------------------------------------------------------------

# merge remote repo to master remote branch

